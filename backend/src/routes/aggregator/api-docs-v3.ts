import { Elysia, t } from "elysia";
import { BankType, Status, MethodType } from "@prisma/client";
import { BANKS } from "../../constants/banks";
import { aggregatorSessionGuard } from "@/middleware/aggregatorGuard";

/**
 * API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤ v3
 * –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö endpoints, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä
 */
export default (app: Elysia) =>
  app
    .use(aggregatorSessionGuard())
    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/",
      async ({ aggregator }) => {
        const baseUrl = aggregator.apiBaseUrl || "https://your-api.example.com";
        const ourBaseUrl = "https://chasepay.pro/api";

        return {
          version: "2.1",
          lastUpdated: "2025-01-29",
          aggregatorInfo: {
            name: aggregator.name,
            apiToken: aggregator.apiToken,
            callbackToken: aggregator.callbackToken,
            baseUrl: baseUrl,
          },
          integration: {
            ourApiUrl: ourBaseUrl,
            callbackUrl: `${ourBaseUrl}/aggregators/callback`,
            batchCallbackUrl: `${ourBaseUrl}/aggregators/callback/batch`,
          },
          quickLinks: {
            summary: {
              title: "üìã –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞",
              description: "–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–∞ 3 —à–∞–≥–∞",
              url: "/api/aggregator/api-docs/summary"
            },
            testing: {
              title: "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
              description: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å–¥–µ–ª–∫—É",
              url: "/api/aggregator/dashboard/test-deal"
            }
          },
          sections: {
            yourEndpoints: {
              title: "üîß Endpoints –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å",
              description: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ API endpoints, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–∞ —Å–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ",
              url: "/api/aggregator/api-docs/your-endpoints",
              baseUrl: baseUrl,
              authentication: `Bearer ${aggregator.apiToken}`,
              endpoints: [
                {
                  method: "POST",
                  path: "/deals",
                  fullUrl: `${baseUrl}/deals`,
                  description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤",
                  required: true,
                  keyPoints: [
                    "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç paymentMethod: 'SBP' –∏–ª–∏ 'C2C'",
                    "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤ –æ—Ç–≤–µ—Ç–µ",
                    "SBP: phoneNumber + bankName",
                    "C2C: cardNumber + bankName", 
                    "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ ‚â§ 2 —Å–µ–∫—É–Ω–¥—ã"
                  ]
                },
                {
                  method: "GET", 
                  path: "/deals/{partnerDealId}",
                  fullUrl: `${baseUrl}/deals/{partnerDealId}`,
                  description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ",
                  required: true,
                  keyPoints: [
                    "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏",
                    "–í–∫–ª—é—á–∞–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏ –¥–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏"
                  ]
                },
                {
                  method: "POST",
                  path: "/deals/{partnerDealId}/disputes",
                  fullUrl: `${baseUrl}/deals/{partnerDealId}/disputes`,
                  description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–æ—Ä–∞ –ø–æ —Å–¥–µ–ª–∫–µ",
                  required: true,
                  keyPoints: [
                    "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–ø–æ—Ä–∞ –∏ —Ñ–∞–π–ª—ã",
                    "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—è—Ç–∏—è —Å–ø–æ—Ä–∞"
                  ]
                }
              ],
              slaRequirements: {
                responseTime: "‚â§ 2 —Å–µ–∫—É–Ω–¥—ã",
                httpStatus: "2xx –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π",
                availability: "99.9% uptime"
              }
            },
            callbacks: {
              title: "üìû Callbacks",
              description: "–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–ª–ª–±—ç–∫–æ–≤ –æ—Ç –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –∫ –Ω–∞–º",
              url: "/api/aggregator/api-docs/callbacks"
            },
            ourCallbacks: {
              title: "–ù–∞—à–∏ callback endpoints",
              description: "–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å callback'–∏ –≤ –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É",
              url: "/api/aggregator/api-docs/our-callbacks"
            },
            constants: {
              title: "–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏",
              description: "–°—Ç–∞—Ç—É—Å—ã —Å–¥–µ–ª–æ–∫, –∫–æ–¥—ã –±–∞–Ω–∫–æ–≤, –º–µ—Ç–æ–¥—ã –ø–ª–∞—Ç–µ–∂–∞",
              url: "/api/aggregator/api-docs/constants"
            },
            examples: {
              title: "–ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞",
              description: "–ì–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–∞ Python –∏ Node.js",
              url: "/api/aggregator/api-docs/examples"
            },
            testing: {
              title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
              description: "–ö–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
              url: "/api/aggregator/api-docs/testing"
            }
          }
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏" },
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/summary ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/summary",
      async ({ aggregator }) => {
        const baseUrl = aggregator.apiBaseUrl || "https://your-api.example.com";
        
        return {
          title: "üìã –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
          aggregator: {
            name: aggregator.name,
            baseUrl: baseUrl,
            apiToken: aggregator.apiToken
          },
          quickStart: {
            step1: {
              title: "1. –†–µ–∞–ª–∏–∑—É–π—Ç–µ endpoints –Ω–∞ —Å–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ",
              endpoints: [
                `POST ${baseUrl}/deals - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏`,
                `GET ${baseUrl}/deals/{id} - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ`,
                `POST ${baseUrl}/deals/{id}/disputes - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø–æ—Ä–∞`
              ]
            },
            step2: {
              title: "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É callback'–æ–≤",
              callbackUrl: "https://chasepay.pro/api/aggregators/callback",
              authentication: `Bearer ${aggregator.callbackToken}`,
              format: "JSON —Å –ø–æ–ª—è–º–∏: ourDealId, status, amount, partnerDealId"
            },
            step3: {
              title: "3. –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
              requirements: [
                "SBP: –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å phoneNumber + bankName –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö",
                "C2C: –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å cardNumber + bankName –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö", 
                "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ ‚â§ 2 —Å–µ–∫—É–Ω–¥—ã",
                "HTTP —Å—Ç–∞—Ç—É—Å 2xx –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π",
                "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Idempotency-Key"
              ]
            }
          },
          testingUrl: "/api/aggregator/dashboard/test-deal",
          fullDocumentationUrl: "/api/aggregator/api-docs/your-endpoints"
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏" }
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/your-endpoints ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/your-endpoints",
      async ({ aggregator }) => {
        const baseUrl = aggregator.apiBaseUrl || "https://your-api.example.com";

        return {
          description: "Endpoints –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞ —Å–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ",
          baseUrl: baseUrl,
          authentication: {
            method: "Bearer Token",
            header: "Authorization: Bearer <YOUR_API_TOKEN>",
            token: "–ú—ã –±—É–¥–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–∞—à API —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization",
            yourToken: aggregator.apiToken,
            note: "–í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–∞—à–µ–º—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É —Ç–æ–∫–µ–Ω—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
          },
          endpoints: [
            {
              id: "create-deal",
              title: "1. –°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏",
              method: "POST",
              path: "/deals",
              fullUrl: `${baseUrl}/deals`,
              description: "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–¥–µ–ª–∫–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã",
              headers: {
                "X-Api-Key": "<YOUR_API_TOKEN>",
                "Content-Type": "application/json",
                "Idempotency-Key": "<UUID> (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
              },
              request: {
                body: {
                  ourDealId: {
                    type: "string",
                    required: true,
                    description: "ID —Å–¥–µ–ª–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ ChasePay",
                    example: "deal-123-456-789"
                  },
                  paymentMethod: {
                    type: "string",
                    required: true,
                    enum: ["SBP", "C2C"],
                    description: "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –ú–µ—Ç–æ–¥ –ø–ª–∞—Ç–µ–∂–∞",
                    example: "SBP"
                  },
                  amount: {
                    type: "number",
                    required: true,
                    description: "–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ –≤ –∫–æ–ø–µ–π–∫–∞—Ö (100 = 1 —Ä—É–±–ª—å)",
                    example: 10000
                  },
                  rate: {
                    type: "number",
                    required: true,
                    description: "–ö—É—Ä—Å –¥–ª—è –º–µ—Ä—á–∞–Ω—Ç–∞ (–ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ rate, –Ω–æ —ç—Ç–æ merchantRate)",
                    example: 100.5
                  },
                  status: {
                    type: "string",
                    required: true,
                    description: "–ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏",
                    example: "CREATED"
                  },
                  expiryDate: {
                    type: "string",
                    required: true,
                    description: "–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ (ISO 8601)",
                    example: "2024-01-29T15:30:00Z"
                  },
                  callbackUrl: {
                    type: "string",
                    required: true,
                    description: "URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ callback'–æ–≤",
                    example: "https://chasepay.pro/api/aggregators/callback"
                  },
                  clientIdentifier: {
                    type: "string",
                    required: false,
                    description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ç –º–µ—Ä—á–∞–Ω—Ç–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞",
                    example: "client_user_12345"
                  },
                  metadata: {
                    type: "object",
                    required: false,
                    description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
                  }
                },
                example: {
                  ourDealId: "deal-123-456",
                  paymentMethod: "SBP",
                  amount: 10000,
                  rate: 100.5,
                  status: "CREATED",
                  expiryDate: "2024-01-29T15:30:00Z",
                  callbackUrl: "https://chasepay.pro/api/aggregators/callback",
                  metadata: {
                    merchantName: "Example Shop"
                  }
                }
              },
              response: {
                success: {
                  status: 200,
                  description: "–ü–æ–ª–Ω–∞—è –∑–∞–ø–∏—Å—å —Å–¥–µ–ª–∫–∏ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏",
                  body: {
                    accepted: {
                      type: "boolean",
                      required: true,
                      description: "–ü—Ä–∏–Ω—è—Ç–∞ –ª–∏ —Å–¥–µ–ª–∫–∞",
                      example: true
                    },
                    deal: {
                      type: "object",
                      required: true,
                      description: "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û! –ü–æ–ª–Ω–∞—è –∑–∞–ø–∏—Å—å —Å–¥–µ–ª–∫–∏",
                      properties: {
                        partnerDealId: {
                          type: "string",
                          description: "ID —Å–¥–µ–ª–∫–∏ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ",
                          example: "AGG-2024-001"
                        },
                        ourDealId: {
                          type: "string",
                          description: "ID —Å–¥–µ–ª–∫–∏ ChasePay (—Ç–æ—Ç –∂–µ —á—Ç–æ –ø—Ä–∏—à–µ–ª)",
                          example: "deal-123-456"
                        },
                        status: {
                          type: "string",
                          description: "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏",
                          example: "CREATED"
                        },
                        amount: {
                          type: "number",
                          description: "–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏",
                          example: 10000
                        },
                        paymentMethod: {
                          type: "string",
                          description: "–ú–µ—Ç–æ–¥ –ø–ª–∞—Ç–µ–∂–∞",
                          example: "SBP"
                        },
                        requisites: {
                          type: "object",
                          required: true,
                          description: "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û! –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã",
                          properties: {
                            bankType: {
                              type: "string",
                              description: "–ö–æ–¥ –±–∞–Ω–∫–∞ –∏–∑ –Ω–∞—à–∏—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç",
                              example: "SBERBANK"
                            },
                            phoneNumber: {
                              type: "string",
                              description: "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è SBP)",
                              example: "+79001234567"
                            },
                            cardNumber: {
                              type: "string",
                              description: "–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è C2C)",
                              example: "4111111111111111"
                            },
                            recipientName: {
                              type: "string",
                              description: "–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è",
                              example: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                            }
                          }
                        },
                        expiryDate: {
                          type: "string",
                          description: "–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è",
                          example: "2024-01-29T15:30:00Z"
                        },
                        createdAt: {
                          type: "string",
                          description: "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
                          example: "2024-01-29T14:30:00Z"
                        }
                      }
                    }
                  },
                  example: {
                    accepted: true,
                    deal: {
                      partnerDealId: "AGG-2024-001",
                      ourDealId: "deal-123-456",
                      status: "CREATED",
                      amount: 10000,
                      paymentMethod: "SBP",
                      requisites: {
                        bankType: "SBERBANK",
                        phoneNumber: "+79001234567",
                        recipientName: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω"
                      },
                      expiryDate: "2024-01-29T15:30:00Z",
                      createdAt: "2024-01-29T14:30:00Z"
                    }
                  }
                },
                error: {
                  status: 200,
                  body: {
                    accepted: false,
                    message: "Reason for rejection"
                  }
                }
              },
              requirements: [
                "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–∞—à–µ–º—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É —Ç–æ–∫–µ–Ω—É",
                "–î–ª—è SBP –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω—É—Ç—å phoneNumber –∏ bankType –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö",
                "–î–ª—è C2C –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω—É—Ç—å cardNumber –∏ bankType –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö",
                "bankType –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ –Ω–∞—à–∏—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç –±–∞–Ω–∫–æ–≤",
                "–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –ø–æ–ª–Ω—É—é –∑–∞–ø–∏—Å—å —Å–¥–µ–ª–∫–∏, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ accepted/rejected",
                "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2 —Å–µ–∫—É–Ω–¥—ã",
                "–ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ —Å —Ç–µ–º –∂–µ Idempotency-Key –≤–µ—Ä–Ω—É—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
              ]
            },
            {
              id: "get-deal",
              title: "2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ",
              method: "GET",
              path: "/deals/{partnerDealId}",
              fullUrl: `${baseUrl}/deals/{partnerDealId}`,
              description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ",
              headers: {
                "Authorization": "Bearer <YOUR_API_TOKEN>"
              },
              parameters: {
                partnerDealId: {
                  type: "string",
                  in: "path",
                  required: true,
                  description: "ID —Å–¥–µ–ª–∫–∏ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ",
                  example: "AGG-2024-001"
                }
              },
              response: {
                success: {
                  status: 200,
                  body: {
                    id: {
                      type: "string",
                      description: "ID —Å–¥–µ–ª–∫–∏ —É –≤–∞—Å",
                      example: "AGG-2024-001"
                    },
                    ourDealId: {
                      type: "string",
                      description: "ID —Å–¥–µ–ª–∫–∏ –≤ ChasePay",
                      example: "deal-123-456"
                    },
                    status: {
                      type: "string",
                      description: "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å",
                      example: "IN_PROGRESS"
                    },
                    amount: {
                      type: "number",
                      description: "–°—É–º–º–∞",
                      example: 10000
                    },
                    paymentMethod: {
                      type: "string",
                      description: "–ú–µ—Ç–æ–¥ –ø–ª–∞—Ç–µ–∂–∞",
                      example: "SBP"
                    },
                    requisites: {
                      type: "object",
                      description: "–†–µ–∫–≤–∏–∑–∏—Ç—ã"
                    },
                    createdAt: {
                      type: "string",
                      description: "–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è",
                      example: "2024-01-29T12:00:00Z"
                    },
                    expiresAt: {
                      type: "string",
                      description: "–í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è",
                      example: "2024-01-29T12:30:00Z"
                    }
                  }
                },
                notFound: {
                  status: 404,
                  body: {
                    error: "Deal not found"
                  }
                }
              },
              requirements: [
                "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization",
                "–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–¥–µ–ª–∫–µ –≤–∫–ª—é—á–∞—è —Ä–µ–∫–≤–∏–∑–∏—Ç—ã",
                "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2 —Å–µ–∫—É–Ω–¥—ã"
              ]
            },
            {
              id: "create-dispute",
              title: "3. –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–æ—Ä–∞ –ø–æ —Å–¥–µ–ª–∫–µ",
              method: "POST",
              path: "/deals/{partnerDealId}/disputes",
              fullUrl: `${baseUrl}/deals/{partnerDealId}/disputes`,
              description: "–ò–Ω–∏—Ü–∏–∞—Ü–∏—è —Å–ø–æ—Ä–∞ –ø–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–¥–µ–ª–∫–µ",
              headers: {
                "Authorization": "Bearer <YOUR_API_TOKEN>",
                "Content-Type": "application/json"
              },
              parameters: {
                partnerDealId: {
                  type: "string",
                  in: "path",
                  required: true,
                  description: "ID —Å–¥–µ–ª–∫–∏ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ"
                }
              },
              request: {
                body: {
                  ourDealId: {
                    type: "string",
                    required: true,
                    description: "ID —Å–¥–µ–ª–∫–∏ –≤ ChasePay (–ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å–ø–æ—Ä)",
                    example: "deal-123-456"
                  },
                  message: {
                    type: "string",
                    required: true,
                    description: "–°–æ–æ–±—â–µ–Ω–∏–µ/—Ç–µ–∫—Å—Ç —Å–ø–æ—Ä–∞",
                    example: "–ö–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–ª—É—á–∏–ª —Å—Ä–µ–¥—Å—Ç–≤–∞"
                  },
                  attachments: {
                    type: "array",
                    required: true,
                    description: "–ú–∞—Å—Å–∏–≤ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ",
                    items: {
                      type: "string",
                      description: "URL —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ChasePay"
                    },
                    example: [
                      "https://chasepay.pro/files/dispute-screenshot-1.jpg",
                      "https://chasepay.pro/files/dispute-document-2.pdf"
                    ]
                  }
                },
                example: {
                  ourDealId: "deal-123-456",
                  message: "–ö–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–ª—É—á–∏–ª —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç—ã",
                  attachments: [
                    "https://chasepay.pro/files/dispute-screenshot-1.jpg",
                    "https://chasepay.pro/files/dispute-document-2.pdf"
                  ]
                }
              },
              response: {
                success: {
                  status: 200,
                  body: {
                    accepted: true,
                    message: "Dispute created"
                  }
                }
              },
              requirements: [
                "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization",
                "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
                "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ ID —Å–¥–µ–ª–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–æ—Ä–∞",
                "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2 —Å–µ–∫—É–Ω–¥—ã"
              ]
            }
          ]
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "Endpoints –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä" },
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/our-callbacks ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/our-callbacks",
      async ({ aggregator }) => {
        return {
          description: "–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å callback'–∏ –≤ –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É",
          authentication: {
            method: "Bearer Token",
            header: "Authorization: Bearer <CALLBACK_TOKEN>",
            token: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à Callback Token –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
            yourToken: aggregator.callbackToken
          },
          endpoints: [
            {
              title: "1. –û–¥–∏–Ω–æ—á–Ω—ã–π callback",
              method: "POST",
              url: "https://chasepay.pro/api/aggregators/callback",
              headers: {
                "Authorization": `Bearer ${aggregator.callbackToken}`,
                "Content-Type": "application/json"
              },
              body: {
                ourDealId: {
                  type: "string",
                  required: true,
                  description: "ID —Å–¥–µ–ª–∫–∏ –≤ ChsPay"
                },
                status: {
                  type: "string",
                  required: false,
                  enum: ["CREATED", "IN_PROGRESS", "READY", "CANCELED", "EXPIRED", "DISPUTE"],
                  description: "–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å"
                },
                amount: {
                  type: "number",
                  required: false,
                  description: "–ù–æ–≤–∞—è —Å—É–º–º–∞ (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å)"
                },
                partnerDealId: {
                  type: "string",
                  required: false,
                  description: "–í–∞—à ID —Å–¥–µ–ª–∫–∏"
                },
                reason: {
                  type: "string",
                  required: false,
                  description: "–ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
                }
              },
              examples: [
                {
                  title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞",
                  body: {
                    ourDealId: "deal-123",
                    status: "READY"
                  }
                },
                {
                  title: "–û—Ç–º–µ–Ω–∞ —Å –ø—Ä–∏—á–∏–Ω–æ–π",
                  body: {
                    ourDealId: "deal-456",
                    status: "CANCELED",
                    reason: "User cancelled"
                  }
                }
              ],
              response: {
                success: {
                  status: 200,
                  body: {
                    status: "accepted",
                    ourDealId: "deal-123",
                    message: "Callback processed"
                  }
                }
              }
            },
            {
              title: "2. –ú–∞—Å—Å–æ–≤—ã–π callback",
              method: "POST",
              url: "https://chasepay.pro/api/aggregators/callback/batch",
              description: "–î–æ 100 callback'–æ–≤ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º",
              headers: {
                "Authorization": `Bearer ${aggregator.callbackToken}`,
                "Content-Type": "application/json"
              },
              body: {
                type: "array",
                maxItems: 100,
                items: {
                  ourDealId: "string",
                  status: "string",
                  amount: "number",
                  reason: "string"
                }
              },
              example: [
                {
                  ourDealId: "deal-1",
                  status: "READY"
                },
                {
                  ourDealId: "deal-2",
                  status: "CANCELED",
                  reason: "Timeout"
                }
              ],
              response: {
                success: {
                  status: 200,
                  body: {
                    status: "accepted",
                    processed: 2,
                    results: [
                      {
                        ourDealId: "deal-1",
                        status: "accepted",
                        message: "Status updated"
                      }
                    ]
                  }
                }
              }
            }
          ]
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å callback'–∏ –∫ –Ω–∞–º" },
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/callbacks ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/callbacks",
      async ({ aggregator }) => {
        return {
          title: "üìû Callbacks - –ö–æ–ª–ª–±—ç–∫–∏ –æ—Ç –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –∫ –Ω–∞–º",
          description: "–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∫–æ–ª–ª–±—ç–∫–∏ –≤ –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–¥–µ–ª–æ–∫",
          
          overview: {
            purpose: "–ö–æ–ª–ª–±—ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Å—Ç–∞—Ç—É—Å–µ —Å–¥–µ–ª–æ–∫ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞",
            frequency: "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–æ–ª–ª–±—ç–∫ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–¥–µ–ª–∫–∏",
            reliability: "–ü—Ä–∏ –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥, –∑–∞—Ç–µ–º —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç, –∑–∞—Ç–µ–º —á–µ—Ä–µ–∑ —á–∞—Å"
          },

          authentication: {
            method: "Bearer Token",
            header: "Authorization: Bearer <CALLBACK_TOKEN>",
            token: aggregator.callbackToken,
            description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à Callback Token –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–ª–ª–±—ç–∫–æ–≤",
            security: "–¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –Ω–µ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ"
          },

          endpoints: [
            {
              id: "single-callback",
              title: "1. –û–¥–∏–Ω–æ—á–Ω—ã–π –∫–æ–ª–ª–±—ç–∫",
              method: "POST",
              url: "https://chasepay.pro/api/aggregators/callback",
              description: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏",
              
              headers: {
                "Authorization": `Bearer ${aggregator.callbackToken}`,
                "Content-Type": "application/json",
                "User-Agent": "YourAggregatorName/1.0"
              },

              requestBody: {
                description: "JSON –æ–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏",
                required: ["ourDealId"],
                properties: {
                  ourDealId: {
                    type: "string",
                    required: true,
                    description: "ID —Å–¥–µ–ª–∫–∏ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ (—Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏)",
                    example: "deal-123-456-789"
                  },
                  status: {
                    type: "string",
                    required: false,
                    enum: ["CREATED", "IN_PROGRESS", "READY", "CANCELED", "EXPIRED", "DISPUTE"],
                    description: "–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏",
                    example: "READY"
                  },
                  amount: {
                    type: "number",
                    required: false,
                    description: "–ù–æ–≤–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏ –≤ –∫–æ–ø–µ–π–∫–∞—Ö (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å)",
                    example: 10000
                  },
                  partnerDealId: {
                    type: "string",
                    required: false,
                    description: "–í–∞—à ID —Å–¥–µ–ª–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞",
                    example: "AGG-2024-001"
                  },
                  reason: {
                    type: "string",
                    required: false,
                    description: "–ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è CANCELED, DISPUTE)",
                    example: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø–ª–∞—Ç–µ–∂"
                  },
                  updatedAt: {
                    type: "string",
                    required: false,
                    description: "–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601",
                    example: "2024-01-29T15:30:00Z"
                  },
                  metadata: {
                    type: "object",
                    required: false,
                    description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
                    example: { "processor": "internal", "fee": 50 }
                  }
                },
                
                examples: [
                  {
                    title: "–£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏",
                    description: "–ü–ª–∞—Ç–µ–∂ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω",
                    body: {
                      ourDealId: "deal-123-456",
                      status: "READY",
                      partnerDealId: "AGG-2024-001"
                    }
                  },
                  {
                    title: "–û—Ç–º–µ–Ω–∞ —Å–¥–µ–ª–∫–∏ —Å –ø—Ä–∏—á–∏–Ω–æ–π",
                    description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø–ª–∞—Ç–µ–∂",
                    body: {
                      ourDealId: "deal-789-012",
                      status: "CANCELED",
                      reason: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –æ–ø–µ—Ä–∞—Ü–∏—é",
                      partnerDealId: "AGG-2024-002"
                    }
                  },
                  {
                    title: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É–º–º—ã",
                    description: "–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ –±—ã–ª–∞ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞",
                    body: {
                      ourDealId: "deal-345-678",
                      status: "IN_PROGRESS",
                      amount: 9500,
                      reason: "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏"
                    }
                  },
                  {
                    title: "–ò–Ω–∏—Ü–∏–∞—Ü–∏—è —Å–ø–æ—Ä–∞",
                    description: "–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–ª–∞—Ç–µ–∂–æ–º",
                    body: {
                      ourDealId: "deal-456-789",
                      status: "DISPUTE",
                      reason: "–°—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
                    }
                  }
                ]
              },

              responses: {
                success: {
                  status: 200,
                  description: "–ö–æ–ª–ª–±—ç–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω",
                  body: {
                    status: "accepted",
                    ourDealId: "deal-123-456",
                    message: "Callback processed successfully",
                    processedAt: "2024-01-29T15:30:00Z"
                  }
                },
                ignored: {
                  status: 200,
                  description: "–ö–æ–ª–ª–±—ç–∫ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω (–¥—É–±–ª–∏—Ä—É—é—â–∏–π –∏–ª–∏ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–π)",
                  body: {
                    status: "ignored",
                    ourDealId: "deal-123-456",
                    message: "Callback ignored - no changes needed"
                  }
                },
                error: {
                  status: 400,
                  description: "–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–±—ç–∫–∞",
                  body: {
                    status: "error",
                    message: "Invalid status transition",
                    details: "Cannot change from READY to IN_PROGRESS"
                  }
                },
                notFound: {
                  status: 404,
                  description: "–°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                  body: {
                    status: "error",
                    message: "Deal not found",
                    ourDealId: "deal-123-456"
                  }
                },
                unauthorized: {
                  status: 401,
                  description: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
                  body: {
                    error: "Unauthorized",
                    message: "Invalid callback token"
                  }
                }
              }
            },

            {
              id: "batch-callback",
              title: "2. –ú–∞—Å—Å–æ–≤—ã–π –∫–æ–ª–ª–±—ç–∫",
              method: "POST",
              url: "https://chasepay.pro/api/aggregators/callback/batch",
              description: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–¥–µ–ª–æ–∫ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º (–¥–æ 100 —Å–¥–µ–ª–æ–∫)",
              
              headers: {
                "Authorization": `Bearer ${aggregator.callbackToken}`,
                "Content-Type": "application/json",
                "User-Agent": "YourAggregatorName/1.0"
              },

              requestBody: {
                description: "–ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–æ–ª–ª–±—ç–∫–æ–≤ (–º–∞–∫—Å–∏–º—É–º 100 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)",
                type: "array",
                maxItems: 100,
                items: "–¢–∞–∫–∏–µ –∂–µ –æ–±—ä–µ–∫—Ç—ã –∫–∞–∫ –≤ –æ–¥–∏–Ω–æ—á–Ω–æ–º –∫–æ–ª–ª–±—ç–∫–µ",
                example: [
                  {
                    ourDealId: "deal-001",
                    status: "READY",
                    partnerDealId: "AGG-001"
                  },
                  {
                    ourDealId: "deal-002", 
                    status: "CANCELED",
                    reason: "Timeout"
                  },
                  {
                    ourDealId: "deal-003",
                    status: "IN_PROGRESS"
                  }
                ]
              },

              responses: {
                success: {
                  status: 200,
                  description: "–ú–∞—Å—Å–æ–≤—ã–π –∫–æ–ª–ª–±—ç–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω",
                  body: {
                    status: "processed",
                    totalCount: 3,
                    successCount: 2,
                    ignoredCount: 1,
                    errorCount: 0,
                    results: [
                      {
                        ourDealId: "deal-001",
                        status: "accepted",
                        message: "Status updated"
                      },
                      {
                        ourDealId: "deal-002",
                        status: "accepted", 
                        message: "Deal canceled"
                      },
                      {
                        ourDealId: "deal-003",
                        status: "ignored",
                        message: "No changes needed"
                      }
                    ]
                  }
                }
              }
            }
          ],

          statusTransitions: {
            title: "–î–æ–ø—É—Å—Ç–∏–º—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã —Å—Ç–∞—Ç—É—Å–æ–≤",
            description: "–ù–µ –≤—Å–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç–∞—Ç—É—Å–∞–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã. –°–ª–µ–¥—É–π—Ç–µ —ç—Ç–æ–π —Å—Ö–µ–º–µ:",
            transitions: {
              CREATED: {
                allowed: ["IN_PROGRESS", "CANCELED", "EXPIRED"],
                description: "–°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏"
              },
              IN_PROGRESS: {
                allowed: ["READY", "CANCELED", "EXPIRED", "DISPUTE"],
                description: "–°–¥–µ–ª–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏"
              },
              READY: {
                allowed: ["DISPUTE"],
                description: "–°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
              },
              CANCELED: {
                allowed: [],
                description: "–°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ (—Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å)"
              },
              EXPIRED: {
                allowed: [],
                description: "–°–¥–µ–ª–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ (—Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å)"
              },
              DISPUTE: {
                allowed: ["READY", "CANCELED"],
                description: "–ü–æ —Å–¥–µ–ª–∫–µ –æ—Ç–∫—Ä—ã—Ç —Å–ø–æ—Ä"
              }
            }
          },

          bestPractices: {
            title: "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
            recommendations: [
              {
                title: "–°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å",
                description: "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–æ–ª–ª–±—ç–∫–∏ —Å—Ä–∞–∑—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –Ω–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ –∏—Ö"
              },
              {
                title: "–ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å", 
                description: "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≥–æ –∂–µ –∫–æ–ª–ª–±—ç–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π"
              },
              {
                title: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫",
                description: "–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ 4xx/5xx –æ—Ç–≤–µ—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ 30 —Å–µ–∫, 5 –º–∏–Ω, 1 —á–∞—Å"
              },
              {
                title: "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ",
                description: "–õ–æ–≥–∏—Ä—É–π—Ç–µ –≤—Å–µ –∏—Å—Ö–æ–¥—è—â–∏–µ –∫–æ–ª–ª–±—ç–∫–∏ –∏ –æ—Ç–≤–µ—Ç—ã –æ—Ç –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã"
              },
              {
                title: "–¢–∞–π–º–∞—É—Ç—ã",
                description: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ —Ç–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ –º–µ–Ω–µ–µ 10 —Å–µ–∫—É–Ω–¥"
              },
              {
                title: "–ü—Ä–∏—á–∏–Ω—ã –æ—Ç–º–µ–Ω—ã",
                description: "–í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–∏—á–∏–Ω—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ CANCELED –∏ DISPUTE"
              }
            ]
          },

          troubleshooting: {
            title: "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º",
            commonIssues: [
              {
                issue: "401 Unauthorized",
                solution: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å callback —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization"
              },
              {
                issue: "404 Deal not found",
                solution: "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ ourDealId —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ID –∏–∑ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã"
              },
              {
                issue: "400 Invalid status transition",
                solution: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ –≤—ã—à–µ"
              },
              {
                issue: "–ö–æ–ª–ª–±—ç–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è",
                solution: "–í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ç—É—Å —É–∂–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º"
              },
              {
                issue: "–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞",
                solution: "–£–≤–µ–ª–∏—á—å—Ç–µ —Ç–∞–π–º–∞—É—Ç –¥–æ 10+ —Å–µ–∫—É–Ω–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥"
              }
            ]
          },

          testing: {
            title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ª–ª–±—ç–∫–æ–≤",
            description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:",
            tools: [
              {
                name: "curl",
                example: `curl -X POST https://chasepay.pro/api/aggregators/callback \\
  -H "Authorization: Bearer ${aggregator.callbackToken}" \\
  -H "Content-Type: application/json" \\
  -d '{
    "ourDealId": "test-deal-123",
    "status": "READY",
    "partnerDealId": "your-test-id"
  }'`
              },
              {
                name: "–ñ—É—Ä–Ω–∞–ª –∫–æ–ª–ª–±—ç–∫–æ–≤",
                description: "–í—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –∫–æ–ª–ª–±—ç–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞",
                url: "/api/aggregator/dashboard"
              }
            ]
          }
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–ª–ª–±—ç–∫–æ–≤ –æ—Ç –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞" },
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/constants ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/constants",
      async () => {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –∏–∑ enum
        const statusDescriptions: Record<Status, string> = {
          CREATED: "–°–æ–∑–¥–∞–Ω–∞",
          IN_PROGRESS: "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ", 
          READY: "–ó–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ",
          CANCELED: "–û—Ç–º–µ–Ω–µ–Ω–∞",
          EXPIRED: "–ò—Å—Ç–µ–∫–ª–∞",
          DISPUTE: "–°–ø–æ—Ä",
          MILK: "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å"
        };

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±–∞–Ω–∫–∏ –∏–∑ enum –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
        const bankNames: Record<string, string> = {};
        
        // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–Ω–∫–∏ –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
        BANKS.forEach(bank => {
          bankNames[bank.code] = bank.label;
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–Ω–∫–∏ –∏–∑ enum, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞—Ö
        Object.values(BankType).forEach(bankType => {
          if (!bankNames[bankType]) {
            // –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –±–∞–Ω–∫–æ–≤ –±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è
            bankNames[bankType] = bankType.replace(/_/g, ' ').toLowerCase()
              .split(' ')
              .map(word => word.charAt(0).toUpperCase() + word.slice(1))
              .join(' ');
          }
        });

        return {
          statuses: Object.entries(statusDescriptions).reduce((acc, [code, description]) => {
            acc[code] = { code, description };
            return acc;
          }, {} as Record<string, { code: string; description: string }>),
          
          banks: Object.entries(bankNames).reduce((acc, [code, name]) => {
            acc[code] = { code, name };
            return acc;
          }, {} as Record<string, { code: string; name: string }>),
          
          paymentMethods: {
            SBP: { 
              code: "SBP", 
              description: "–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π (–ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞)",
              requiredFields: ["phoneNumber", "bankName"]
            },
            C2C: { 
              code: "C2C", 
              description: "Card to Card (–ø–µ—Ä–µ–≤–æ–¥ —Å –∫–∞—Ä—Ç—ã –Ω–∞ –∫–∞—Ä—Ç—É)",
              requiredFields: ["cardNumber", "bankName"]
            }
          },
          
          requirements: {
            sla: {
              maxResponseTime: "2000ms",
              recommendedResponseTime: "< 500ms",
              httpStatus: "2xx –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"
            },
            requisites: {
              SBP: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª—è: phoneNumber, bankName",
              C2C: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª—è: cardNumber, bankName"
            },
            security: {
              protocol: "HTTPS only",
              tokens: "–•—Ä–∞–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ, –Ω–µ –ª–æ–≥–∏—Ä—É–π—Ç–µ –∏—Ö",
              headers: "Authorization: Bearer <your-api-token>"
            }
          }
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–í—Å–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã: —Å—Ç–∞—Ç—É—Å—ã, –±–∞–Ω–∫–∏, –º–µ—Ç–æ–¥—ã –ø–ª–∞—Ç–µ–∂–∞" },
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/examples ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/examples",
      async () => {
        return {
          description: "–ü—Ä–∏–º–µ—Ä—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏",
          languages: ["Python", "Node.js", "PHP"],
          examples: {
            python: {
              createDeal: `from flask import Flask, request, jsonify
import uuid

app = Flask(__name__)

@app.route('/deals', methods=['POST'])
def create_deal():
    api_key = request.headers.get('X-Api-Key')
    if not api_key:
        return jsonify({'error': 'Unauthorized'}), 401
    
    data = request.json
    payment_method = data.get('paymentMethod')
    client_identifier = data.get('clientIdentifier')  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    requisites = {
        'bankName': '–°–±–µ—Ä–±–∞–Ω–∫',
        'recipientName': '–û–û–û –ö–æ–º–ø–∞–Ω–∏—è'
    }
    
    if payment_method == 'SBP':
        requisites['phoneNumber'] = '+79001234567'
    elif payment_method == 'C2C':
        requisites['cardNumber'] = '4111111111111111'
    
    return jsonify({
        'accepted': True,
        'partnerDealId': f"AGG-{uuid.uuid4()}",
        'requisites': requisites
    })`,
              
              sendCallback: `import requests

def send_callback(deal_id, status):
    url = "https://chasepay.pro/api/aggregators/callback"
    headers = {
        "Authorization": "Bearer YOUR_CALLBACK_TOKEN",
        "Content-Type": "application/json"
    }
    data = {
        "ourDealId": deal_id,
        "status": status
    }
    response = requests.post(url, json=data, headers=headers)
    return response.json()`
            },
            nodejs: {
              createDeal: `app.post('/deals', (req, res) => {
    const { paymentMethod, amount } = req.body;
    
    const requisites = {
        bankName: '–°–±–µ—Ä–±–∞–Ω–∫',
        recipientName: '–û–û–û –ö–æ–º–ø–∞–Ω–∏—è'
    };
    
    if (paymentMethod === 'SBP') {
        requisites.phoneNumber = '+79001234567';
    } else if (paymentMethod === 'C2C') {
        requisites.cardNumber = '4111111111111111';
    }
    
    res.json({
        accepted: true,
        partnerDealId: \`AGG-\${Date.now()}\`,
        requisites
    });
});`,
              
              sendCallback: `const axios = require('axios');

async function sendCallback(dealId, status) {
    const response = await axios.post(
        'https://chasepay.pro/api/aggregators/callback',
        {
            ourDealId: dealId,
            status: status
        },
        {
            headers: {
                'Authorization': 'Bearer YOUR_CALLBACK_TOKEN'
            }
        }
    );
    return response.data;
}`
            }
          }
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞" },
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/endpoints ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/endpoints",
      async ({ aggregator }) => {
        const baseUrl = aggregator.apiBaseUrl || "https://your-api.example.com";
        
        return {
          title: "Endpoints –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä",
          baseUrl: baseUrl,
          endpoints: [
            {
              method: "POST",
              path: "/deals",
              url: `${baseUrl}/deals`,
              description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞",
              headers: {
                "Authorization": `Bearer ${aggregator.apiToken}`,
                "Content-Type": "application/json",
                "Idempotency-Key": "optional-uuid-v4"
              },
              requestBody: {
                ourDealId: "string (required) - ID —Å–¥–µ–ª–∫–∏ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ",
                status: "string (required) - –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å (–æ–±—ã—á–Ω–æ 'PENDING')",
                amount: "number (required) - –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ –≤ —Ä—É–±–ª—è—Ö",
                merchantRate: "number (required) - –ö–æ–º–∏—Å—Å–∏—è –º–µ—Ä—á–∞–Ω—Ç–∞",
                paymentMethod: "string (required) - –ú–µ—Ç–æ–¥ –ø–ª–∞—Ç–µ–∂–∞: 'SBP' –∏–ª–∏ 'C2C'",
                bankType: "string (optional) - –ö–æ–¥ –±–∞–Ω–∫–∞ –¥–ª—è C2C –æ–ø–µ—Ä–∞—Ü–∏–π",
                partnerDealId: "string (optional) - –í–∞—à ID —Å–¥–µ–ª–∫–∏ (–µ—Å–ª–∏ –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–µ–Ω)",
                callbackUrl: "string (required) - URL –¥–ª—è –∫–æ–ª–ª–±–µ–∫–æ–≤: https://chasepay.pro/api/aggregators/callback"
              },
              responseBody: {
                accepted: "boolean (required) - –ü—Ä–∏–Ω—è—Ç–∞ –ª–∏ —Å–¥–µ–ª–∫–∞",
                partnerDealId: "string (optional but recommended) - –í–∞—à ID —Å–¥–µ–ª–∫–∏",
                message: "string (optional) - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ —Å—Ç–∞—Ç—É—Å–µ",
                requisites: {
                  _description: "object (required if accepted=true) - –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã",
                  bankName: "string - –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞",
                  cardNumber: "string - –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (–¥–ª—è C2C)",
                  phoneNumber: "string - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–¥–ª—è SBP)",
                  recipientName: "string - –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
                },
                dealDetails: {
                  _description: "object (optional) - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–¥–µ–ª–∫–µ",
                  expiresAt: "string (ISO-8601) - –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏",
                  minAmount: "number - –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞",
                  maxAmount: "number - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞"
                }
              },
              slaRequirement: "HTTP 2xx –∏ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ ‚â§ 2 —Å–µ–∫—É–Ω–¥—ã"
            },
            {
              method: "GET", 
              path: "/deals/{partnerDealId}",
              url: `${baseUrl}/deals/{partnerDealId}`,
              description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ",
              headers: {
                "Authorization": `Bearer ${aggregator.apiToken}`
              },
              responseBody: {
                partnerDealId: "string - –í–∞—à ID —Å–¥–µ–ª–∫–∏",
                ourDealId: "string - –ù–∞—à ID —Å–¥–µ–ª–∫–∏", 
                status: "string - –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏",
                amount: "number - –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏",
                createdAt: "string (ISO-8601) - –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è",
                updatedAt: "string (ISO-8601) - –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
                requisites: "object - –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã",
                dealDetails: "object - –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏"
              }
            },
            {
              method: "POST",
              path: "/deals/{partnerDealId}/disputes", 
              url: `${baseUrl}/deals/{partnerDealId}/disputes`,
              description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–æ—Ä–∞ –ø–æ —Å–¥–µ–ª–∫–µ",
              headers: {
                "Authorization": `Bearer ${aggregator.apiToken}`,
                "Content-Type": "application/json"
              },
              requestBody: {
                ourDealId: "string (required) - –ù–∞—à ID —Å–¥–µ–ª–∫–∏",
                message: "string (required) - –¢–µ–∫—Å—Ç —Å–ø–æ—Ä–∞",
                attachments: "array of string URLs (required) - –°—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∞–π–ª—ã"
              },
              responseBody: {
                accepted: "boolean - –ü—Ä–∏–Ω—è—Ç –ª–∏ —Å–ø–æ—Ä",
                message: "string - –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ"
              }
            }
          ]
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "Endpoints –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–º" }
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/callback-format ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/callback-format",
      async ({ aggregator }) => {
        return {
          title: "–§–æ—Ä–º–∞—Ç callback'–æ–≤ –≤ –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É",
          callbackUrl: "https://chasepay.pro/api/aggregators/callback",
          authentication: {
            header: "Authorization",
            value: `Bearer ${aggregator.callbackToken}`,
            alternative: {
              header: "X-Aggregator-Token",
              value: aggregator.callbackToken
            }
          },
          singleCallback: {
            method: "POST",
            url: "https://chasepay.pro/api/aggregators/callback",
            headers: {
              "Authorization": `Bearer ${aggregator.callbackToken}`,
              "Content-Type": "application/json"
            },
            body: {
              ourDealId: "string (required) - –ù–∞—à ID —Å–¥–µ–ª–∫–∏",
              status: "string (required) - –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞",
              amount: "number (optional) - –ù–æ–≤–∞—è —Å—É–º–º–∞ (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å)",
              partnerDealId: "string (optional) - –í–∞—à ID —Å–¥–µ–ª–∫–∏",
              updatedAt: "string (optional, ISO-8601) - –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
              reason: "string (optional) - –ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞",
              metadata: "object (optional) - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
            },
            response: {
              status: "string - 'accepted' | 'ignored' | 'error'",
              message: "string - –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
              ourDealId: "string - –ù–∞—à ID —Å–¥–µ–ª–∫–∏"
            }
          },
          batchCallback: {
            method: "POST", 
            url: "https://chasepay.pro/api/aggregators/callback",
            body: "array of callback objects",
            response: "array of result objects"
          },
          idempotency: "–ü–æ–≤—Ç–æ—Ä–Ω—ã–µ callback'–∏ —Å —Ç–µ–º–∏ –∂–µ –¥–∞–Ω–Ω—ã–º–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è"
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–§–æ—Ä–º–∞—Ç callback'–æ–≤" }
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/integration-flow ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/integration-flow",
      async ({ aggregator }) => {
        return {
          title: "–°—Ö–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö",
          flow: [
            {
              step: 1,
              title: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏",
              description: "–ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–∞—à endpoint /deals",
              direction: "–ú—ã ‚Üí –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä",
              endpoint: `${aggregator.apiBaseUrl}/deals`,
              data: "ourDealId, amount, paymentMethod, bankType, callbackUrl"
            },
            {
              step: 2,
              title: "–û—Ç–≤–µ—Ç —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏",
              description: "–í—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã",
              direction: "–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä ‚Üí –ú—ã",
              data: "accepted=true, partnerDealId, requisites (bankName, cardNumber/phoneNumber)"
            },
            {
              step: 3,
              title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞",
              description: "–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ callback'–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–¥–µ–ª–∫–∏",
              direction: "–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä ‚Üí –ú—ã",
              endpoint: "https://chasepay.pro/api/aggregators/callback",
              data: "ourDealId, status, amount, partnerDealId"
            },
            {
              step: 4,
              title: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ—Ä—á–∞–Ω—Ç–∞",
              description: "–ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–¥–æ–º–ª—è–µ–º –º–µ—Ä—á–∞–Ω—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö",
              direction: "–ú—ã ‚Üí –ú–µ—Ä—á–∞–Ω—Ç",
              data: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback'–∞ –º–µ—Ä—á–∞–Ω—Ç–∞"
            }
          ],
          paymentMethods: {
            SBP: {
              description: "–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π",
              requiredRequisites: ["phoneNumber", "bankName"],
              optionalRequisites: ["recipientName"]
            },
            C2C: {
              description: "–ü–µ—Ä–µ–≤–æ–¥ —Å –∫–∞—Ä—Ç—ã –Ω–∞ –∫–∞—Ä—Ç—É", 
              requiredRequisites: ["cardNumber", "bankName"],
              optionalRequisites: ["recipientName"],
              bankTypeRequired: true
            }
          },
          errorHandling: {
            slaViolation: "–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç > 2 —Å–µ–∫ –∏–ª–∏ –Ω–µ HTTP 2xx - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä—É",
            rejectedDeal: "–ï—Å–ª–∏ accepted=false - –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É",
            failedCallback: "–ù–µ—É—Å–ø–µ—à–Ω—ã–µ callback'–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç –ø—Ä–æ—Ü–µ—Å—Å"
          }
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–°—Ö–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏" }
      }
    )

    /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ GET /aggregator/api-docs/testing ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
    .get(
      "/testing",
      async ({ aggregator }) => {
        return {
          description: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
          testEndpoint: aggregator.apiBaseUrl ? `${aggregator.apiBaseUrl}/deals` : "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
          steps: [
            {
              step: 1,
              title: "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Base URL",
              description: "–í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ —É–∫–∞–∂–∏—Ç–µ –±–∞–∑–æ–≤—ã–π URL –≤–∞—à–µ–≥–æ API",
              currentValue: aggregator.apiBaseUrl || "–ù–µ —É–∫–∞–∑–∞–Ω"
            },
            {
              step: 2,
              title: "–†–µ–∞–ª–∏–∑—É–π—Ç–µ endpoint —Å–æ–∑–¥–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏",
              description: "POST /deals –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã",
              requirements: [
                "–î–ª—è SBP - –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                "–î–ª—è C2C - –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã",
                "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ < 2 —Å–µ–∫—É–Ω–¥"
              ]
            },
            {
              step: 3,
              title: "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
              description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å–¥–µ–ª–∫—É'",
              checks: [
                "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞",
                "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤",
                "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞"
              ]
            },
            {
              step: 4,
              title: "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π callback",
              description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É callback'–æ–≤ –≤ –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É",
              example: {
                url: "https://chasepay.pro/api/aggregators/callback",
                headers: {
                  "Authorization": `Bearer ${aggregator.callbackToken}`
                },
                body: {
                  ourDealId: "test-deal-123",
                  status: "READY"
                }
              }
            },
            {
              step: 5,
              title: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∂—É—Ä–Ω–∞–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π",
              description: "–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ"
            }
          ],
          testScenarios: [
            {
              name: "SBP –ø–ª–∞—Ç–µ–∂",
              description: "–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è SBP —Å–¥–µ–ª–∫–∏",
              request: {
                paymentMethod: "SBP",
                amount: 1000
              },
              expectedResponse: {
                requisites: {
                  phoneNumber: "+7XXXXXXXXXX"
                }
              }
            },
            {
              name: "C2C –ø–ª–∞—Ç–µ–∂",
              description: "–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è C2C —Å–¥–µ–ª–∫–∏",
              request: {
                paymentMethod: "C2C",
                amount: 2000
              },
              expectedResponse: {
                requisites: {
                  cardNumber: "XXXXXXXXXXXXXXXX"
                }
              }
            }
          ]
        };
      },
      {
        tags: ["aggregator-api-docs"],
        detail: { summary: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é" },
      }
    );
