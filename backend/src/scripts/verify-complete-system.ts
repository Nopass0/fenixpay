#!/usr/bin/env bun

async function verifyCompleteSystem() {
  try {
    console.log('üéØ –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ù–û–ô –°–ò–°–¢–ï–ú–´ –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò –¢–†–ê–§–ò–ö–ê\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∫–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∫–æ–≤–æ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞...');
    await new Promise(resolve => setTimeout(resolve, 3000)); // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    
    try {
      const healthCheck = await fetch('http://localhost:4000/health');
      const healthData = await healthCheck.json();
      console.log(`‚úÖ –ú–æ–∫–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: ${healthData.service}`);
    } catch (error) {
      console.log('‚ö†Ô∏è –ú–æ–∫–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –º–µ—Ä—á–∞–Ω—Ç–∞
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –º–µ—Ä—á–∞–Ω—Ç–∞...');
    const docsResponse = await fetch('http://localhost:3000/api/merchant/api-docs/endpoints', {
      headers: { 'Authorization': 'Bearer docs_test' }
    });

    if (docsResponse.ok) {
      const docsData = await docsResponse.json();
      const transactionsInEndpoint = docsData.endpoints.find((ep: any) => ep.path === '/merchant/transactions/in');
      
      if (transactionsInEndpoint) {
        const clientIdField = transactionsInEndpoint.parameters.find((p: any) => p.name === 'clientIdentifier');
        if (clientIdField) {
          console.log('‚úÖ –ü–æ–ª–µ clientIdentifier –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –º–µ—Ä—á–∞–Ω—Ç–∞');
          console.log(`   üìù ${clientIdField.description}`);
        } else {
          console.log('‚ùå –ü–æ–ª–µ clientIdentifier –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –º–µ—Ä—á–∞–Ω—Ç–∞');
        }
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Ç—Ä–µ–π–¥–µ—Ä–∞
    console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ API –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–∞—Ñ–∏–∫–∞ —Ç—Ä–µ–π–¥–µ—Ä–∞...');
    const trafficResponse = await fetch('http://localhost:3000/api/trader/traffic-settings', {
      headers: { 'x-trader-token': 'test-session-1756814293326' }
    });

    if (trafficResponse.ok) {
      const trafficData = await trafficResponse.json();
      console.log('‚úÖ API –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   –ù–∞—Å—Ç—Ä–æ–π–∫–∏: ${JSON.stringify(trafficData.settings)}`);
    } else {
      console.log('‚ö†Ô∏è API –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–∞—Ñ–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω—É–∂–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω)');
    }

    // 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å clientIdentifier...');
    const transactionResponse = await fetch('http://localhost:3000/api/merchant/transactions/in', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-merchant-api-key': 'trader9-test-merchant'
      },
      body: JSON.stringify({
        amount: 5000,
        methodId: 'cmf2iukal0001ik9amd2njmbm',
        orderId: `verify-test-${Date.now()}`,
        rate: 95.5,
        expired_at: new Date(Date.now() + 3600000).toISOString(),
        clientIdentifier: 'verify_client_final',
        userIp: '192.168.1.100'
      })
    });

    const transactionResult = await transactionResponse.json();
    console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç: ${transactionResponse.status} - ${transactionResult.status || transactionResult.error}`);

    if (transactionResponse.status === 201) {
      console.log(`   ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${transactionResult.id}`);
    }

    console.log('\nüéâ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('\nüìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:');
    console.log('‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –º–µ—Ä—á–∞–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    console.log('‚úÖ API —Ç—Ä–µ–π–¥–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞');
    console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');

    console.log('\nüåê –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í –ë–†–ê–£–ó–ï–†–ï:');
    console.log('1. http://localhost:3001/merchant/api-docs');
    console.log('   ‚Üí –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ‚Üí POST /api/merchant/transactions/in');
    console.log('   ‚Üí –ü–æ–ª–µ "clientIdentifier" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Å–ø–∏—Å–∫–µ');
    console.log('');
    console.log('2. http://localhost:3001/trader/settings');
    console.log('   ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞');
    console.log('');
    console.log('3. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+Shift+R) –µ—Å–ª–∏ –Ω–µ –≤–∏–¥–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π');

    console.log('\nüöÄ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

verifyCompleteSystem();
