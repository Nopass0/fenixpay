#!/usr/bin/env bun

import { db } from '../db';

async function finalCompleteTest() {
  try {
    console.log('üéØ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–ô –°–ò–°–¢–ï–ú–´\n');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∫–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∫–æ–≤–æ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞...');
    const healthCheck = await fetch('http://localhost:4000/health');
    if (healthCheck.ok) {
      const healthData = await healthCheck.json();
      console.log(`‚úÖ –ú–æ–∫–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: ${healthData.service}`);
    } else {
      console.log('‚ùå –ú–æ–∫–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      return;
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –º–µ—Ä—á–∞–Ω—Ç–∞
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –º–µ—Ä—á–∞–Ω—Ç–∞...');
    const docsResponse = await fetch('http://localhost:3000/api/merchant/api-docs/endpoints', {
      headers: { 'Authorization': 'Bearer docs_test' }
    });

    if (docsResponse.ok) {
      const docsData = await docsResponse.json();
      const transactionsInEndpoint = docsData.endpoints.find((ep: any) => ep.path === '/merchant/transactions/in');
      
      if (transactionsInEndpoint) {
        const clientIdField = transactionsInEndpoint.parameters.find((p: any) => p.name === 'clientIdentifier');
        if (clientIdField) {
          console.log('‚úÖ –ü–æ–ª–µ clientIdentifier –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:');
          console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${clientIdField.description}`);
          console.log(`   –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ: ${clientIdField.required ? '–î–∞' : '–ù–µ—Ç'}`);
          console.log(`   –ü—Ä–∏–º–µ—Ä: ${clientIdField.example}`);
        } else {
          console.log('‚ùå –ü–æ–ª–µ clientIdentifier –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏');
        }
      } else {
        console.log('‚ùå –≠–Ω–¥–ø–æ–∏–Ω—Ç /merchant/transactions/in –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏');
      }
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é');
    }

    // 3. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ –º–µ—Ä—á–∞–Ω—Ç—Å–∫–∏–π API
    console.log('\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å clientIdentifier...');
    
    const merchant = await db.merchant.findUnique({
      where: { token: 'trader9-test-merchant' }
    });

    if (!merchant) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ä—á–∞–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const transactionResponse = await fetch('http://localhost:3000/api/merchant/transactions/in', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-merchant-api-key': merchant.token
      },
      body: JSON.stringify({
        amount: 6000,
        methodId: 'cmf2iukal0001ik9amd2njmbm',
        orderId: `final-test-${Date.now()}`,
        rate: 95.5,
        expired_at: new Date(Date.now() + 3600000).toISOString(),
        clientIdentifier: 'final_test_client_999',
        userIp: '192.168.1.100',
        callbackUri: 'https://example.com/callback'
      })
    });

    const transactionResult = await transactionResponse.json();
    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${transactionResponse.status}`);
    
    if (transactionResponse.status === 201) {
      console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${transactionResult.id}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${transactionResult.status}`);
    } else {
      console.log(`   –î–µ—Ç–∞–ª–∏: ${transactionResult.error || transactionResult.status}`);
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–ø–∞–ª–∞ –∫ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä—É
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä—É...');
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const aggregatorDeals = await fetch('http://localhost:4000/deals', {
      headers: { 'X-Api-Key': 'test-aggregator-api-key-123' }
    });
    
    if (aggregatorDeals.ok) {
      const dealsData = await aggregatorDeals.json();
      const latestDeal = dealsData.deals[dealsData.deals.length - 1];
      
      if (latestDeal && latestDeal.clientIdentifier === 'final_test_client_999') {
        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –≤ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–µ:');
        console.log(`   ID –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞: ${latestDeal.partnerDealId}`);
        console.log(`   –ù–∞—à ID: ${latestDeal.ourDealId}`);
        console.log(`   clientIdentifier: ${latestDeal.clientIdentifier}`);
        console.log(`   –°—É–º–º–∞: ${latestDeal.amount} RUB`);
        console.log(`   –†–µ–∫–≤–∏–∑–∏—Ç—ã: ${latestDeal.requisites?.cardNumber || latestDeal.requisites?.phoneNumber}`);
      } else {
        console.log('‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–µ –∏–ª–∏ –±–µ–∑ clientIdentifier');
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–µ
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–µ...');
    
    const statsResponse = await fetch('http://localhost:4000/stats/clients', {
      headers: { 'X-Api-Key': 'test-aggregator-api-key-123' }
    });
    
    if (statsResponse.ok) {
      const statsData = await statsResponse.json();
      console.log(`   –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: ${statsData.totalClients}`);
      console.log(`   –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: ${statsData.totalDeals}`);
      
      const finalTestClient = statsData.clientStats?.find((c: any) => c.clientIdentifier === 'final_test_client_999');
      if (finalTestClient) {
        console.log(`   final_test_client_999: ${finalTestClient.transactionCount} —Å–¥–µ–ª–æ–∫ (${finalTestClient.trafficType})`);
      }
    }

    console.log('\nüéâ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('\nüìù –ü–†–û–í–ï–†–¨–¢–ï –í –ë–†–ê–£–ó–ï–†–ï:');
    console.log('1. –ú–µ—Ä—á–∞–Ω—Ç—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:3001/merchant/api-docs');
    console.log('   ‚Üí –†–∞–∑–¥–µ–ª "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏" ‚Üí POST /api/merchant/transactions/in');
    console.log('   ‚Üí –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–µ "clientIdentifier"');
    console.log('');
    console.log('2. –¢—Ä–µ–π–¥–µ—Ä—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: http://localhost:3001/trader/settings');
    console.log('   ‚Üí –†–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞"');
    console.log('');
    console.log('3. –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:3001/aggregator/api-docs');
    console.log('   ‚Üí –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–µ "clientIdentifier" –∏ "X-Api-Key"');

    console.log('\nüöÄ –í–°–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ü–û–õ–ù–û–°–¢–¨–Æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await db.$disconnect();
  }
}

finalCompleteTest();
