import { db } from "../db";

async function testDisputeResolutionAdmin() {
  console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–ø–æ—Ä–æ–≤ –∞–¥–º–∏–Ω–æ–º...");

  try {
    // –ù–∞–π–¥–µ–º –ª—é–±–æ–π –∞–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const dispute = await db.dealDispute.findFirst({
      where: {
        status: {
          in: ["OPEN", "IN_PROGRESS"]
        }
      },
      include: {
        deal: {
          include: {
            trader: {
              select: {
                id: true,
                name: true,
                trustBalance: true,
                deposit: true,
                frozenUsdt: true
              }
            }
          }
        }
      }
    });

    if (!dispute) {
      console.log("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
      return;
    }

    console.log("\nüìä –î–∞–Ω–Ω—ã–µ —Å–ø–æ—Ä–∞:");
    console.log(`- ID —Å–ø–æ—Ä–∞: ${dispute.id}`);
    console.log(`- ID —Å–¥–µ–ª–∫–∏: ${dispute.dealId}`);
    console.log(`- –°—Ç–∞—Ç—É—Å —Å–ø–æ—Ä–∞: ${dispute.status}`);
    console.log(`- –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏: ${dispute.deal.status}`);
    console.log(`- –°—É–º–º–∞ –∑–∞–º–æ—Ä–æ–∑–∫–∏: ${dispute.deal.frozenUsdtAmount || 0} USDT`);
    
    if (dispute.deal.trader) {
      console.log(`\nüë§ –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–π–¥–µ—Ä–∞ (${dispute.deal.trader.name}):`);
      console.log(`- Trust Balance: ${dispute.deal.trader.trustBalance} USDT`);
      console.log(`- Deposit: ${dispute.deal.trader.deposit} USDT`);
      console.log(`- Frozen: ${dispute.deal.trader.frozenUsdt} USDT`);
    }

    // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–ø–æ—Ä–∞ –≤ –ø–æ–ª—å–∑—É –º–µ—Ä—á–∞–Ω—Ç–∞
    console.log("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤ –ø–æ–ª—å–∑—É –ú–ï–†–ß–ê–ù–¢–ê...");
    
    const merchantResolutionUrl = `http://localhost:3000/admin/deal-disputes/${dispute.id}/resolve`;
    const merchantPayload = {
      inFavorOf: "MERCHANT",
      resolution: "–¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤ –ø–æ–ª—å–∑—É –º–µ—Ä—á–∞–Ω—Ç–∞"
    };

    console.log(`üì§ POST ${merchantResolutionUrl}`);
    console.log(`üì¶ Payload:`, JSON.stringify(merchantPayload, null, 2));

    const response = await fetch(merchantResolutionUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "x-admin-key": "3d3b2e3efa297cae2bc6b19f3f8448ed2b2c7fd43af823a2a3a0585edfbb67d1"
      },
      body: JSON.stringify(merchantPayload)
    });

    if (response.ok) {
      const result = await response.json();
      console.log("‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", result);

      // –ü—Ä–æ–≤–µ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const updatedDispute = await db.dealDispute.findUnique({
        where: { id: dispute.id },
        include: {
          deal: {
            include: {
              trader: {
                select: {
                  id: true,
                  name: true,
                  trustBalance: true,
                  deposit: true,
                  frozenUsdt: true
                }
              }
            }
          }
        }
      });

      if (updatedDispute) {
        console.log("\nüìä –î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:");
        console.log(`- –°—Ç–∞—Ç—É—Å —Å–ø–æ—Ä–∞: ${updatedDispute.status}`);
        console.log(`- –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏: ${updatedDispute.deal.status}`);
        console.log(`- –†–µ—à–µ–Ω–∏–µ: ${updatedDispute.resolution}`);
        
        if (updatedDispute.deal.trader) {
          console.log(`\nüë§ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–π–¥–µ—Ä–∞:`);
          console.log(`- Trust Balance: ${updatedDispute.deal.trader.trustBalance} USDT`);
          console.log(`- Deposit: ${updatedDispute.deal.trader.deposit} USDT`);
          console.log(`- Frozen: ${updatedDispute.deal.trader.frozenUsdt} USDT`);
        }
      }
    } else {
      const errorText = await response.text();
      console.log("‚ùå –û—à–∏–±–∫–∞:", response.status, errorText);
    }

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–ø–æ—Ä–∞:", error);
  }

  console.log("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testDisputeResolutionAdmin();
