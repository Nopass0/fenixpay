import { db } from "@/db";

async function checkAllAggregatorTimeouts() {
  try {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤ –≤—Å–µ—Ö –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤...");
    
    const aggregators = await db.aggregator.findMany({
      select: {
        id: true,
        name: true,
        email: true,
        apiBaseUrl: true,
        maxSlaMs: true,
        isActive: true,
        isChaseCompatible: true,
        isChaseProject: true
      },
      orderBy: { maxSlaMs: 'asc' }
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${aggregators.length} –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤:`);
    console.log("");

    aggregators.forEach((agg, index) => {
      const status = agg.isActive ? '‚úÖ' : '‚ùå';
      const type = agg.isChaseProject ? 'Chase Project' : 
                  agg.isChaseCompatible ? 'Chase Compatible' : 'Standard';
      
      console.log(`${index + 1}. ${status} ${agg.name}`);
      console.log(`   Email: ${agg.email}`);
      console.log(`   API URL: ${agg.apiBaseUrl}`);
      console.log(`   –¢–∞–π–º–∞—É—Ç: ${agg.maxSlaMs}ms`);
      console.log(`   –¢–∏–ø: ${type}`);
      console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${agg.isActive}`);
      console.log("");
    });

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–π–º–∞—É—Ç–∞–º
    const shortTimeouts = aggregators.filter(agg => agg.maxSlaMs <= 2000);
    const mediumTimeouts = aggregators.filter(agg => agg.maxSlaMs > 2000 && agg.maxSlaMs <= 5000);
    const longTimeouts = aggregators.filter(agg => agg.maxSlaMs > 5000);

    console.log("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤:");
    console.log(`   –ö–æ—Ä–æ—Ç–∫–∏–µ (‚â§2000ms): ${shortTimeouts.length} –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤`);
    console.log(`   –°—Ä–µ–¥–Ω–∏–µ (2001-5000ms): ${mediumTimeouts.length} –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤`);
    console.log(`   –î–ª–∏–Ω–Ω—ã–µ (>5000ms): ${longTimeouts.length} –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤`);

    if (shortTimeouts.length > 0) {
      console.log("");
      console.log("‚ö†Ô∏è  –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä—ã —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏ (–º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã):");
      shortTimeouts.forEach(agg => {
        console.log(`   - ${agg.name}: ${agg.maxSlaMs}ms`);
      });
    }

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–π–º–∞—É—Ç–æ–≤:", error);
  } finally {
    await db.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
checkAllAggregatorTimeouts();
