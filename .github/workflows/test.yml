name: Test

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: chase_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          export PRISMA_BINARIES_MIRROR=https://github.com/prisma/prisma-engines-builds/releases/download
          export PRISMA_ENGINES_MIRROR=https://github.com/prisma/prisma-engines-builds/releases/download
          export PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING=true
          export PRISMA_SKIP_POSTINSTALL_GENERATE=true
          bun install
      
      - name: Setup test environment
        working-directory: ./backend
        run: |
          echo "DATABASE_URL=postgresql://postgres:testpassword@localhost:5432/chase_test?schema=public" > .env
          echo "JWT_SECRET=test-secret-key" >> .env
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Wait for PostgreSQL to be ready
        env:
          PGPASSWORD: testpassword
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
          # Additional check with actual connection
          until psql -h localhost -p 5432 -U postgres -d chase_test -c "SELECT 1;" >/dev/null 2>&1; do
            echo "Waiting for database to accept connections..."
            sleep 2
          done
          echo "Database is accepting connections!"

      - name: Generate Prisma client
        working-directory: ./backend
        env:
          PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: '1'
          DATABASE_URL: postgresql://postgres:testpassword@localhost:5432/chase_test?schema=public
        run: |
          npx prisma generate
        
      - name: Run database migrations (safe)
        working-directory: ./backend
        env:
          PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: '1'
          DATABASE_URL: postgresql://postgres:testpassword@localhost:5432/chase_test?schema=public
        run: |
          chmod +x scripts/safe-migrate.sh
          ./scripts/safe-migrate.sh
      
      - name: Run backend tests
        working-directory: ./backend
        run: bun test || echo "No tests configured"

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci --legacy-peer-deps
      
      - name: Run linter
        working-directory: ./frontend
        run: npm run lint || echo "No lint configured"
      
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test || echo "No tests configured"